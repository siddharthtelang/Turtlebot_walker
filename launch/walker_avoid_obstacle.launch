<launch>
  <arg name="model" default="waffle" doc="model type [burger, waffle, waffle_pi]"/>
  <arg name="x_init" default="5"/>
  <arg name="y_init" default="4"/>
  <arg name="z_init" default="0"/>
  <arg name="theta_init" default="0"/>
  <arg name="record_bag" default="false" />
  <arg name="rosbag_directory" default="bag"/>

  <include file="$(find gazebo_ros)/launch/empty_world.launch">
    <!-- <arg name="world_name" value="$(find turtlebot3_gazebo)/worlds/turtlebot3_stage_4.world"/> -->
    <arg name="world_name"  value="$(find turtlebot_walker)/worlds/map.world"/>
    <arg name="paused" value="false"/>
    <arg name="use_sim_time" value="true"/>
    <arg name="gui" value="true"/>
    <arg name="headless" value="false"/>
  </include>

    <node 
        pkg="turtlebot_walker" 
        name="turtlebot_walker" 
        type="walker_node" 
        output="screen" 
        args = "$(arg x_init) $(arg y_init)"/>
  <param name="robot_description" command="$(find xacro)/xacro --inorder $(find turtlebot3_description)/urdf/turtlebot3_waffle.urdf.xacro" />

    <group if="$(arg record_bag)">
        <node pkg="rosbag" type="record" name="record"
            args="record -a -x '(.*)/camera(.*)' -O $(arg rosbag_directory)"/> 
    </group>

  <node pkg="gazebo_ros" type="spawn_model" name="spawn_urdf"  args="-urdf -model turtlebot3_burger -x $(arg x_init) -y $(arg y_init) -z $(arg z_init) -Y $(arg theta_init) -param robot_description" />
</launch>
